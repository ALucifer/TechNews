# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    articles_directory: '%kernel.project_dir%/public/images/product'
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    #App\Service\Article\ArticleCatalogue:
    #  calls:
    #    - ['addSource', ['@App\Service\Article\YamlSource']]
    #    - ['addSource', ['@App\Service\Article\DoctrineSource']]

    #App\Service\Article\YamlSource:
    #  tags:
    #    - app.article_source

    #App\Service\Article\DoctrineSource:
    #  tags:
    #     - app.article_source

    _instanceof:
      App\Service\Article\ArticleAbstractSource:
        tags:
          - app.article_source

    App\Service\Article\ArticleCatalogue:
      calls:
        - ['setSources', [!tagged app.article_source]]
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\DataCollector\SourceCollector:
      tags:
        -
          name:     data_collector
          template: 'collector/source.html.twig'
          # must match the value returned by the getName() method
          id:       'app.source_collector'
          # optional priority
          # priority: 300
      public: false